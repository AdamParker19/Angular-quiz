{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/Login/LoginComponent.ts","./src/app/components/Login/Login.component.html","./src/app/components/Quiz/Question.component.ts","./src/app/components/Quiz/Question.component.html","./src/app/components/Quiz/Quiz.component.ts","./src/app/components/Quiz/Quiz.component.html","./src/app/components/Register/RegisterComponent.ts","./src/app/components/Register/Register.component.html","./src/app/components/Results/Results.components.ts","./src/app/components/Results/Results.components.html","./src/app/services/auth-service.ts","./src/app/services/quiz-service.ts","./src/app/services/token-storage.ts","./src/app/services/user-service.ts","./src/app/test/test.component.ts","./src/app/test/test.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { TestComponent } from './test/test.component';\r\nimport { QuizComponent } from './components/Quiz/Quiz.component';\r\nimport { ResultsComponent } from './components/Results/Results.components';\r\n\r\nconst routes: Routes = [{\r\n  path: 'test',\r\n  component: TestComponent\r\n},\r\n{\r\n  path: 'quiz',\r\n  component: QuizComponent\r\n},\r\n{\r\n  path: '',\r\n  component: ResultsComponent\r\n}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { User } from './user';\r\nimport { UserService } from './services/user-service';\r\nimport { NgbModal, NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\r\nimport { LoginComponent } from './components/Login/LoginComponent';\r\nimport { RegisterComponent } from './components/Register/RegisterComponent';\r\nimport { TokenStorageService } from './services/token-storage'\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: [\"./app.component.scss\"]\r\n})\r\n\r\nexport class AppComponent implements OnInit {\r\n  title = 'app';\r\n\r\n  modalOptions: NgbModalOptions;\r\n\r\n\r\n  isLoggedIn = false;\r\n\r\n  constructor(private userService: UserService,\r\n    private modalService: NgbModal, private tokenStorageService: TokenStorageService) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\r\n\r\n  }\r\n\r\n\r\n\r\n  openLogin() {\r\n    const modalRef = this.modalService.open(LoginComponent);\r\n    modalRef.componentInstance.id = 10; // should be the id\r\n\r\n    modalRef.result.then((result) => {\r\n      console.log(result);\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  openRegister() {\r\n    const modalRef = this.modalService.open(RegisterComponent);\r\n    modalRef.componentInstance.id = 11; // should be the id\r\n\r\n    modalRef.result.then((result) => {\r\n      console.log(result);\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n\r\n  logout(): void {\r\n    this.tokenStorageService.signOut();\r\n    window.location.reload();\r\n  }\r\n\r\n\r\n}\r\n","<!--The content below is only a placeholder and can be replaced.-->\r\n\r\n<link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n\r\n<div class=\"body\">\r\n\r\n    <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\r\n        <ul class=\"navbar-nav mr-auto\" routerLinkActive=\"active\">\r\n            <li class=\"nav-item\">\r\n                <a href=\"/\"><button class=\"btn btn-primary\">Home</button></a>\r\n            </li>\r\n        </ul>\r\n\r\n        <ul class=\"navbar-nav ml-auto\">\r\n            <li class=\"nav-item\">\r\n                <button (click)=\"openRegister()\" class=\"btn btn-primary\">Register</button>\r\n\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <button (click)=\"openLogin()\" class=\"btn btn-primary\" *ngIf=\"!isLoggedIn\">Login</button>\r\n\r\n            </li>\r\n        </ul>\r\n\r\n        <ul class=\"navbar-nav ml-auto\">\r\n\r\n            <li class=\"nav-item\">\r\n                <button class=\"btn btn-primary\" (click)=\"logout()\" *ngIf=\"isLoggedIn\">Logout</button>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n\r\n\r\n    <div class=\"container\">\r\n        <router-outlet></router-outlet>\r\n\r\n\r\n    </div>\r\n\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { TestComponent } from './test/test.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { LoginComponent } from './components/Login/LoginComponent';\r\nimport { RegisterComponent } from './components/Register/RegisterComponent';\r\nimport { ResultsComponent } from './components/Results/Results.components';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    TestComponent,\r\n    RegisterComponent,\r\n    LoginComponent,\r\n    ResultsComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [LoginComponent, RegisterComponent]\r\n\r\n})\r\nexport class AppModule { }\r\n","import { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Component, Output, EventEmitter, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormControl, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { AuthService } from '../../services/auth-service';\r\nimport { TokenStorageService } from '../../services/token-storage';\r\n\r\n@Component({\r\n    selector: 'app-form-modal',\r\n    templateUrl: './Login.component.html',\r\n    styleUrls: ['./Login.component.scss']\r\n})\r\n\r\nexport class LoginComponent {\r\n    @Input() id: number;\r\n    form: any = {\r\n        email: null,\r\n        password: null\r\n    };\r\n    isSuccessful = false;\r\n    isLoginFailed = false;\r\n    isLoggedIn = false;\r\n    isSignUpFailed = false;\r\n    errorMessage = '';\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private authService: AuthService,\r\n        private tokenStorage: TokenStorageService,\r\n        public activeModal: NgbActiveModal\r\n    ) {\r\n        this.createForm();\r\n    }\r\n\r\n    private createForm() {\r\n        this.form = this.formBuilder.group({\r\n            email: '',\r\n            password: '',\r\n        });\r\n    }\r\n\r\n    closeModal() {\r\n        this.activeModal.close('Modal Closed');\r\n    }\r\n\r\n    onSubmit(): void {\r\n        const { email, password } = this.form;\r\n        this.authService.login(email, password).subscribe(\r\n            data => {\r\n                console.log(data);\r\n                this.tokenStorage.saveToken(data.accessToken);\r\n                this.tokenStorage.saveUser(email);\r\n                this.isSuccessful = true;\r\n                this.isLoginFailed = false;\r\n\r\n                setTimeout(() => {\r\n                    this.closeModal();\r\n                    window.location.reload();\r\n                }, 500)\r\n\r\n            },\r\n            err => {\r\n                this.errorMessage = err.error.message;\r\n                this.isLoginFailed = true;\r\n                setTimeout(() => {\r\n                    this.closeModal();\r\n                }, 500)\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n\r\n}\r\n","<div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">Login Form</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\r\n    </button>\r\n</div>\r\n<form *ngIf=\"!isLoggedIn\" name=\"form\" (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\" novalidate>\r\n    <div class=\"form-group\">\r\n        <label for=\"email\">Email</label>\r\n        <input type=\"email\" class=\"form-control\" name=\"email\" [(ngModel)]=\"form.email\" required #email=\"ngModel\" />\r\n        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"email.errors && f.submitted\">\r\n            email is required!\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"password\">Password</label>\r\n        <input type=\"password\" class=\"form-control\" name=\"password\" [(ngModel)]=\"form.password\" required minlength=\"6\"\r\n            #password=\"ngModel\" />\r\n        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"password.errors && f.submitted\">\r\n            <div *ngIf=\"password.errors.required\">Password is required</div>\r\n            <div *ngIf=\"password.errors.minlength\">\r\n                Password must be at least 6 characters\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <button class=\"btn btn-primary btn-block\">\r\n            Login\r\n        </button>\r\n    </div>\r\n    <div class=\"form-group\">\r\n\r\n        <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"f.submitted && isSuccessful\">\r\n            Login succeeded\r\n        </div>\r\n        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"f.submitted && isLoginFailed\">\r\n            Login failed: {{ errorMessage }}\r\n        </div>\r\n    </div>\r\n</form>","import { Component, OnInit, Input, DoCheck, Output, EventEmitter } from '@angular/core';\r\nimport { QuizService } from '../../services/quiz-service';\r\nimport { Quiz } from './quiz';\r\n\r\n@Component({\r\n    selector: 'app-question',\r\n    templateUrl: './Question.component.html',\r\n    styleUrls: ['./Quiz.component.scss']\r\n})\r\n\r\nexport class QuestionComponent implements OnInit, DoCheck {\r\n    @Input() questionIndex: number;\r\n    currentQuestion: string;\r\n    currentOptions: string[];\r\n    questions: Quiz[];\r\n    userAnswer: string;\r\n    correctAnswer: string;\r\n    constructor(private quizService: QuizService) { }\r\n\r\n    @Output() answers =\r\n        new EventEmitter<{ user_answer: string, correct_answer: string }>();\r\n\r\n\r\n    @Output() totalQuestions = new EventEmitter<number>();\r\n\r\n    ngOnInit(): void {\r\n        this.getQuestions();\r\n\r\n    }\r\n    randomNumber(min: 0, max: 14) {\r\n        return Math.random() * (max - min) + min;\r\n    }\r\n    getQuestions() {\r\n        return this.quizService.getQuestions().subscribe(\r\n            data => {\r\n\r\n                this.questions = data.results;\r\n\r\n            }\r\n\r\n        )\r\n    }\r\n    setUserAnswer(option: string) {\r\n        this.userAnswer = option;\r\n        this.correctAnswer = this.questions[this.questionIndex].correct_answer;\r\n        this.answers.emit(\r\n            { user_answer: this.userAnswer, correct_answer: this.correctAnswer });\r\n    }\r\n\r\n\r\n\r\n    ngDoCheck(): void {\r\n        this.currentQuestion = this.questions[this.questionIndex].question;\r\n        this.currentOptions = this.questions[this.questionIndex].incorrect_answers.concat(this.questions[this.questionIndex].correct_answer);\r\n    }\r\n}","Question {{questionIndex+1}} of {{10}}\r\n<br>\r\n{{currentQuestion}}\r\n<p *ngFor=\"let option of currentOptions\">\r\n    <input (click)=\"setUserAnswer(option)\" type=\"radio\" value={{option}} name=\"answer\">{{option}}\r\n</p>","import { Component, OnInit, Input, Output } from '@angular/core';\r\nimport { QuizService } from '../../services/quiz-service';\r\nimport { Quiz } from './quiz'\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { QuestionComponent } from './Question.component';\r\nimport { TokenStorageService } from '../../services/token-storage';\r\nimport { disableDebugTools } from '@angular/platform-browser';\r\n\r\n@Component({\r\n    selector: 'quiz-page',\r\n    templateUrl: './Quiz.component.html',\r\n    styleUrls: ['./Quiz.component.scss']\r\n})\r\n\r\nexport class QuizComponent implements OnInit {\r\n\r\n    currentUser: any;\r\n    currentUserId: any;\r\n    currentIndex = 0;\r\n    answers: any;\r\n    questionNumber: String;\r\n    score = 0;\r\n    quizOver = false;\r\n    disable = false;\r\n    isLoggedIn = false;\r\n    constructor(private token: TokenStorageService, private quizService: QuizService) { }\r\n\r\n    ngOnInit(): void {\r\n        this.disable = true;\r\n        this.isLoggedIn = !!this.token.getToken();\r\n        if (!this.isLoggedIn) {\r\n            window.location.replace('/');\r\n        }\r\n        else {\r\n            this.currentUser = this.token.getUser();\r\n            this.initQuiz();\r\n        }\r\n    }\r\n\r\n\r\n    receiveAnswers(receivedAnswers) {\r\n        this.answers = receivedAnswers;\r\n        this.disable = false;\r\n    }\r\n    goNext() {\r\n        this.disable = true;\r\n        this.currentIndex++;\r\n\r\n        if (this.currentIndex > 9) {\r\n            this.endQuiz();\r\n        }\r\n\r\n    }\r\n\r\n    submit() {\r\n        if (this.disable) {\r\n            alert('Please select an option before submitting')\r\n\r\n        }\r\n        else {\r\n            this.updateScore();\r\n        }\r\n\r\n    }\r\n\r\n    goPrevious() {\r\n        this.disable = true;\r\n        if (this.currentIndex === 0) {\r\n            this.currentIndex = 0;\r\n        }\r\n        else {\r\n            this.currentIndex--;\r\n        }\r\n    }\r\n\r\n    initQuiz(): void {\r\n        this.quizService.initQuiz(this.currentUser).subscribe(\r\n            data => {\r\n                this.currentUserId = data._id;\r\n            },\r\n            err => {\r\n                console.log(err.error.message);\r\n            }\r\n\r\n        );\r\n    }\r\n    endQuiz() {\r\n        this.quizOver = true;\r\n        alert('Quiz Over! Score is ' + this.score + '/ 10');\r\n    }\r\n\r\n    updateScore() {\r\n        if (this.answers.user_answer === this.answers.correct_answer) {\r\n            this.questionNumber = 'q' + (this.currentIndex + 1);\r\n            console.log(this.questionNumber)\r\n            this.score++;\r\n        }\r\n    }\r\n}","<!--This div renders if quizOver is false-->\r\n<div *ngIf=\"!quizOver\">\r\n    <app-question [questionIndex]=\"currentIndex\" (answers)=\"receiveAnswers($event)\">\r\n    </app-question>\r\n    <br>\r\n    <button (click)=\"submit()\" class=\"btn btn-primary\">Submit</button>\r\n    <br>\r\n    <div style=\"margin-top: 15px;\">\r\n        <button (click)=\"goPrevious()\">Previous</button>\r\n        <button (click)=\"goNext()\">Next</button>\r\n    </div>\r\n</div>\r\n\r\n<!--This div renders if quizOver is true-->\r\n<div *ngIf=\"quizOver\" class=\"border\">\r\n    <h4>Quiz is Over!</h4>\r\n    Your score is {{score}} / {{10}}\r\n    <br>\r\n    <a href=\"/\"><button class=\"btn btn-primary\" routerLinkActive=\"active\">Check leaderboards</button></a>\r\n</div>","import { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Component, Output, EventEmitter, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormControl, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { AuthService } from '../../services/auth-service';\r\n\r\n@Component({\r\n    selector: 'app-form-modal',\r\n    templateUrl: './Register.component.html',\r\n    styleUrls: ['./Register.component.scss']\r\n})\r\n\r\nexport class RegisterComponent {\r\n    @Input() id: number;\r\n    form: any = {\r\n        email: null,\r\n        password: null\r\n    };\r\n    isSuccessful = false;\r\n    isLoginFailed = false;\r\n    isLoggedIn = false;\r\n    isSignUpFailed = false;\r\n    errorMessage = '';\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private authService: AuthService,\r\n        public activeModal: NgbActiveModal\r\n    ) {\r\n        this.createForm();\r\n    }\r\n\r\n    private createForm() {\r\n        this.form = this.formBuilder.group({\r\n            email: '',\r\n            password: '',\r\n        });\r\n    }\r\n\r\n    onSubmit(): void {\r\n        const { email, password } = this.form;\r\n        this.authService.register(email, password).subscribe(\r\n            data => {\r\n                console.log(data);\r\n                this.isSuccessful = true;\r\n                this.isSignUpFailed = false;\r\n            },\r\n            err => {\r\n                this.errorMessage = err.error.message;\r\n                this.isSignUpFailed = true;\r\n            }\r\n\r\n        );\r\n\r\n        setTimeout(() => {\r\n            this.closeModal();\r\n\r\n        }, 1000)\r\n    }\r\n\r\n\r\n    closeModal() {\r\n        this.activeModal.close('Modal Closed');\r\n    }\r\n}\r\n","<div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">Register Form</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\r\n    </button>\r\n</div>\r\n<form *ngIf=\"!isLoggedIn\" name=\"form\" (ngSubmit)=\"f.form.valid && onSubmit()\" #f=\"ngForm\" novalidate>\r\n    <div class=\"form-group\">\r\n        <label for=\"email\">Email</label>\r\n        <input type=\"email\" class=\"form-control\" name=\"email\" [(ngModel)]=\"form.email\" required #email=\"ngModel\" />\r\n        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"email.errors && f.submitted\">\r\n            email is required!\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"password\">Password</label>\r\n        <input type=\"password\" class=\"form-control\" name=\"password\" [(ngModel)]=\"form.password\" required minlength=\"6\"\r\n            #password=\"ngModel\" />\r\n        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"password.errors && f.submitted\">\r\n            <div *ngIf=\"password.errors.required\">Password is required</div>\r\n            <div *ngIf=\"password.errors.minlength\">\r\n                Password must be at least 6 characters\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <button class=\"btn btn-primary btn-block\">\r\n            Register\r\n        </button>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"f.submitted && isSignUpFailed\">\r\n            Registration failed: {{ errorMessage }}\r\n        </div>\r\n    </div>\r\n</form>\r\n\r\n<div class=\"alert alert-success\" *ngIf=\"isSuccessful\">\r\n    Your registration is successful!\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { User } from '../../user';\r\nimport { UserService } from '../../services/user-service';\r\nimport { empty } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'results-page',\r\n    templateUrl: './Results.components.html',\r\n    styleUrls: ['./Results.components.scss']\r\n})\r\n\r\nexport class ResultsComponent implements OnInit {\r\n    isUsers = false;\r\n    users: User[];\r\n    constructor(private userService: UserService) {\r\n\r\n    }\r\n    ngOnInit(): void {\r\n        this.getUsers();\r\n    }\r\n    getUsers() {\r\n        return this.userService.getUsers()\r\n            .subscribe(\r\n                users => {\r\n                    this.users = users;\r\n                    if (this.users.length === 0) {\r\n                        this.isUsers = false;\r\n                    }\r\n                    else {\r\n                        this.isUsers = true;\r\n                    }\r\n                },\r\n                err => {\r\n                    this.isUsers = false;\r\n                }\r\n            );\r\n    }\r\n}","<a href=\"/quiz\"><button class=\"btn btn-primary\" routerLinkActive=\"active\" style=\"margin-bottom: 20px;\">Start\r\n        Quiz</button></a>\r\n<table class=\"table table-striped table-bordered\">\r\n    <thead>\r\n        <tr>\r\n            <th>User</th>\r\n            <th>Question 1</th>\r\n            <th>Question 2</th>\r\n            <th>Question 3</th>\r\n            <th>Question 4</th>\r\n            <th>Question 5</th>\r\n            <th>Question 6</th>\r\n            <th>Question 7</th>\r\n            <th>Question 8</th>\r\n            <th>Question 9</th>\r\n            <th>Question 10</th>\r\n            <th>Total Marks</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let user of users\" style=\"background-color: rgba(0,0,0,.05);\">\r\n            <td>{{user.email}}</td>\r\n            <td>{{user.q1}}</td>\r\n            <td>{{user.q2}}</td>\r\n            <td>{{user.q3}}</td>\r\n            <td>{{user.q4}}</td>\r\n            <td>{{user.q5}}</td>\r\n            <td>{{user.q6}}</td>\r\n            <td>{{user.q7}}</td>\r\n            <td>{{user.q8}}</td>\r\n            <td>{{user.q9}}</td>\r\n            <td>{{user.q10}}</td>\r\n            <td>{{user.total}}</td>\r\n        </tr>\r\n        <tr *ngIf=\"!isUsers\" style=\"background-color: rgba(0,0,0,.05);\">\r\n            <td colspan=\"12\">No results yet</td>\r\n        </tr>\r\n    </tbody>\r\n</table>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst AUTH_API = 'http://localhost:3000/api/';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    login(email: string, password: string): Observable<any> {\r\n        return this.http.post(AUTH_API + 'Users/login', {\r\n            email,\r\n            password\r\n        }, httpOptions);\r\n    }\r\n\r\n    register(email: string, password: string): Observable<any> {\r\n        return this.http.post(AUTH_API + 'Users/register', {\r\n            email,\r\n            password\r\n        }, httpOptions);\r\n\r\n    }\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nconst API_URL = 'http://localhost:3000/api/';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class QuizService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getQuestions(): Observable<any> {\r\n    return this.http.get(API_URL + 'questions', { responseType: 'json' });\r\n  }\r\n\r\n  initQuiz(email: String): Observable<any> {\r\n    return this.http.post(API_URL + 'Quiz/startQuiz', { email }, httpOptions);\r\n  }\r\n\r\n  submitAnswer(_id: String, question: String): Observable<any> {\r\n    return this.http.post(API_URL + 'Quiz/updateScore', { _id, question }, httpOptions);\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\n\r\nconst TOKEN_KEY = 'auth-token';\r\nconst USER_KEY = 'auth-user';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TokenStorageService {\r\n    constructor() { }\r\n\r\n    signOut(): void {\r\n        window.sessionStorage.clear();\r\n    }\r\n\r\n    public saveToken(token: string): void {\r\n        window.sessionStorage.removeItem(TOKEN_KEY);\r\n        window.sessionStorage.setItem(TOKEN_KEY, token);\r\n    }\r\n\r\n    public getToken(): string | null {\r\n        return window.sessionStorage.getItem(TOKEN_KEY);\r\n    }\r\n\r\n    public saveUser(user: any): void {\r\n        window.sessionStorage.removeItem(USER_KEY);\r\n        window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\r\n    }\r\n\r\n    public getUser(): any {\r\n        const user = window.sessionStorage.getItem(USER_KEY);\r\n        if (user) {\r\n            return JSON.parse(user);\r\n        }\r\n\r\n        return {};\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UserService {\r\n    private usersUrl = 'http://localhost:3000/api/Users';  // URL to web api\r\n    constructor(\r\n        private http: HttpClient\r\n    ) { }\r\n\r\n    getUsers(): Observable<any> {\r\n        return this.http.get(this.usersUrl)\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-test',\r\n  templateUrl: './test.component.html',\r\n  styleUrls: ['./test.component.scss']\r\n})\r\nexport class TestComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<p>test works!</p>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}